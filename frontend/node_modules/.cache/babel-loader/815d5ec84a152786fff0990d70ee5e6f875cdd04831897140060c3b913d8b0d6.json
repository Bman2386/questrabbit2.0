{"ast":null,"code":"const SAVE_DATA = 'temp/saveData';\nconst saveData = data => ({\n  type: SAVE_DATA,\n  payload: data\n});\nexport const recieveData = data => dispatch => {\n  dispatch(saveData(data));\n};\nconst initialState = {};\nconst tempReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SAVE_DATA:\n      return Object.assign({}, state, action.data);\n    default:\n      return state;\n  }\n};\nexport default tempReducer;","map":{"version":3,"names":["SAVE_DATA","saveData","data","type","payload","recieveData","dispatch","initialState","tempReducer","state","action","Object","assign"],"sources":["/mnt/c/Users/brend/Desktop/questrabbit2.0/frontend/src/store/temp.js"],"sourcesContent":["const SAVE_DATA = 'temp/saveData';\r\n\r\nconst saveData = (data) => ({\r\n    type: SAVE_DATA,\r\n    payload: data\r\n});\r\n\r\nexport const recieveData = (data) => dispatch => {\r\n    dispatch(saveData(data));\r\n};\r\n\r\nconst initialState = {};\r\n\r\nconst tempReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case SAVE_DATA:\r\n            return Object.assign({}, state, action.data);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default tempReducer;"],"mappings":"AAAA,MAAMA,SAAS,GAAG,eAAe;AAEjC,MAAMC,QAAQ,GAAIC,IAAI,KAAM;EACxBC,IAAI,EAAEH,SAAS;EACfI,OAAO,EAAEF;AACb,CAAC,CAAC;AAEF,OAAO,MAAMG,WAAW,GAAIH,IAAI,IAAKI,QAAQ,IAAI;EAC7CA,QAAQ,CAACL,QAAQ,CAACC,IAAI,CAAC,CAAC;AAC5B,CAAC;AAED,MAAMK,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,KAAK,uEAACF,YAAY;EAAA,IAAEG,MAAM;EAC3C,QAAOA,MAAM,CAACP,IAAI;IACd,KAAKH,SAAS;MACV,OAAOW,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,KAAK,EAAEC,MAAM,CAACR,IAAI,CAAC;IAChD;MACI,OAAOO,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}